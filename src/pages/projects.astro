---
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
import "../styles/global.css";
import "../styles/projects.css";
import "@fontsource/work-sans";
import "@fontsource/work-sans/700.css";

type ProjectModule = {
  frontmatter: {
    title: string;
    description?: string;
    date?: string;
    link?: string;
    github?: string;
    devicons?: string[];
  };
}

const projectImport = import.meta.glob("./projects/*.md");

const projects = await Promise.all(
  Object.entries(projectImport).map(async ([path, resolver]) => {
    const project = (await resolver()) as ProjectModule;
    // Extract the filename (without extension)
    const filename = path.split("/").pop()?.replace(/\.md$/, "") ?? "";
    return {
      filename,
      frontmatter: project.frontmatter,
    };
  }),
);

projects.sort((a, b) => {
  return (
    a.frontmatter.title.localeCompare(b.frontmatter.title)
  );
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css"
    />
    <title>Blog</title>
  </head>
  <body>
    <Navigation currentPath={Astro.url.pathname} />
    <main class="main-content">
      <h1>Projects</h1>
      <div class="project-list">
        {
          projects.map((project) => (
            <div class="project">
              <h1 class="project-title">
                <a href={`${project.frontmatter.link}`} class="project-title">
                  {project.frontmatter.title}
                </a>
              </h1>
              <div class="project-icons">
                <a class="devicon-github-original project-gh-icon" href={project.frontmatter.github}></a>{project.frontmatter.devicons?.map((icon) => (
                  <i class={`devicon-${icon}-plain`}></i>
                ))}
              </div>
              <p class="project-description">
                {project.frontmatter.description || "No description available."}
              </p>
            </div>
          ))
        }
      </div>
    </main>
    <Footer />
  </body>
</html>
